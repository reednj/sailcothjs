{"version":3,"sources":["../src/sailcloth.js"],"names":["XY","PIXEL_RATIO","ctx","document","createElement","getContext","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Renderable","constructor","renderingFinished","positionType","zIndex","render","viewport","sinceLastFrame","ViewportObject","options","x","y","update","Viewport","element","sizingElement","autoRedraw","onRedraw","tick","waitingForFrame","lastFrameTime","renderQueueChanged","renderQueue","HTMLCanvasElement","canvas","width","height","appendChild","context","setScale","addEventListener","autosize","n","_scale","updateDimensions","_width","_height","_rect","parentSize","clientWidth","clientHeight","setCanvasSize","forEach","o","onResize","refresh","Math","floor","style","start","requestAnimationFrame","redraw","bind","stop","clear","beforeLen","length","filter","currentTime","Date","renderObjects","save","scale","renderObject","restore","add","startRendering","push","sort","a","b","clearRect","getObjectCount","center","rect","Rect","canvasToViewport","sx","sy","origin","windowToViewport","offsetLeft","offsetTop","WorldViewport","staticQueue","worldQueue","updateQueues","translate","i","objectVisible","setOrigin","getOrigin","setCenter","_center","round","pointVisible","bounds","getBounds","undefined"],"mappings":"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","file":"sailcloth.js","sourcesContent":["// @flow\nimport * as XY from './types'\nexport { XY }\n\n// this tells us the display density, if it is retina etc. This is important, otherwise\n// things end up loking blurry - we need to scale when rendering to make things look\n// nice and sharp. This PIXEL_RATIO will tell us the amount to scale by\nvar PIXEL_RATIO = (function () {\n\tvar ctx = document.createElement(\"canvas\").getContext(\"2d\");\n\tvar dpr = window.devicePixelRatio || 1;\n\tvar bsr = ctx.webkitBackingStorePixelRatio ||\n\t\tctx.mozBackingStorePixelRatio ||\n\t\tctx.msBackingStorePixelRatio ||\n\t\tctx.oBackingStorePixelRatio ||\n\t\tctx.backingStorePixelRatio || 1;\n\n\t//$FlowFixMe\n\treturn dpr / bsr;\n})();\n\nexport interface IRenderable {\n    viewport:Viewport;\n\trenderingFinished:boolean;\n\tpositionType: \"world\" | \"static\";\n    render(viewport:Viewport, sinceLastFrame:number):void;\n}\n\nexport class Renderable {\n\tviewport:Viewport;\n\trenderingFinished:boolean;\n\tpositionType: \"world\" | \"static\";\n\tzIndex:number;\n\tconstructor() {\n\t\tthis.renderingFinished = false;\n\t\tthis.positionType = \"world\";\n\t\tthis.zIndex = 100;\n\t}\n\n\trender(viewport:Viewport, sinceLastFrame:number) {\n\t}\n}\n\nexport class ViewportObject extends Renderable {\n    x:number;\n\ty:number;\n\twidth:?number;\n\theight:?number;\n    constructor(options:{x:number,y:number}) {\n\t\tsuper();\n\t\tthis.x = options.x;\n\t\tthis.y = options.y;\n    }\n\n    render(viewport:Viewport, sinceLastFrame:number) {\n        this.update(sinceLastFrame);\n    }\n\n    update(sinceLastFrame:number) {\n    }\n}\n\nexport class Viewport {\n    element:HTMLElement;\n    options:Object;\n    tick:number;\n    waitingForFrame:boolean;\n    lastFrameTime:?Date;\n    renderQueueChanged:boolean;\n    renderQueue:Object[];\n    canvas:HTMLCanvasElement;\n\tcontext:CanvasRenderingContext2D;\n\torigin:XY.Point;\n    \n    _width:number;\n    _height:number;\n\t_scale:number;\n\t_rect:?XY.Rect;\n\t\n\t// if this is set to an element, the canvas will try to fill it\n\t// as much as possible when the window is resized\n\tsizingElement:?HTMLElement;\n\tconstructor(element:HTMLElement, options:Object) {\n\t\tthis.element = element;\n\t\tthis.sizingElement = options.sizingElement || null;\n\n\t\tthis.options = options || {};\n\t\tthis.options.autoRedraw = false;\n\t\tthis.options.onRedraw = this.options.onRedraw || function() {};\n\n\t\tthis.tick = 0;\n\t\tthis.waitingForFrame = false;\n\t\tthis.lastFrameTime = null;\n\n\t\tthis.renderQueueChanged = false;\n\t\tthis.renderQueue = [];\n\n\t\tif(this.element instanceof HTMLCanvasElement) {\n\t\t\tthis.canvas = this.element;\n\t\t} else {\n\t\t\tthis.sizingElement = this.sizingElement|| this.element;\n\t\t\tthis.canvas = document.createElement('canvas');\n\t\t\tthis.canvas.width = 300;\n\t\t\tthis.canvas.height = 200;\n\t\t\tthis.element.appendChild(this.canvas);\n\t\t}\n\n\t\tthis.context = this.canvas.getContext('2d');\n\t\t\n\t\tthis.setScale(PIXEL_RATIO);\n\n\t\tif(this.sizingElement) {\n\t\t\twindow.addEventListener('resize', () => this.autosize());\n\t\t\tthis.autosize();\n\t\t}\n\t\t\n\t}\n\tsetScale(n:number) {\n\t\tif(n != null) {\n\t\t\tthis._scale = n;\n\t\t\tthis.updateDimensions();\n\t\t}\n\t}\n\n\tupdateDimensions() {\n\t\t// the canvas height and width properties actually call a function. We assign them\n\t\t// here to variables for speed reasons, as they might get accessed many times per\n\t\t// frame\n\t\tthis._width = this.canvas.width / (this._scale || 1.0);\n\t\tthis._height = this.canvas.height / (this._scale || 1.0);\n\t\tthis._rect = null;\n\t}\n\n\tautosize() {\n\t\tif(this.canvas && this.sizingElement) {\n\t\t\tvar parentSize = {\n\t\t\t\tx: this.sizingElement.clientWidth || 0,\n\t\t\t\ty: this.sizingElement.clientHeight || 0\n\t\t\t}\n\n\t\t\tthis.setCanvasSize(parentSize.x, parentSize.y);\n\n\t\t\tthis.renderQueue.forEach(o => {\n\t\t\t\tif(typeof o.onResize == 'function') {\n\t\t\t\t\to.onResize(this._width, this._height, this);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.updateDimensions();\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tsetCanvasSize(width:number, height:number) {\n\t\tif(this._scale > 1.0) {\n\t\t\tthis.canvas.width = Math.floor(width * this._scale);\n\t\t\tthis.canvas.height = Math.floor(height * this._scale);\n\t\t\tthis.canvas.style.width = width + 'px';\n\t\t\tthis.canvas.style.height = height + 'px';\n\t\t} else {\n\t\t\tthis.canvas.width = width;\n\t\t\tthis.canvas.height = height;\n\t\t}\n\t}\n\n\tstart() {\n\t\treturn this.refresh(true);\n\t}\n\n\t// requests an animation frame from the canvas to redraw all objects\n\t//\n\t// This doesn't actually redraw the canvas directly, so it can safely be called multiple\n\t// times without doing uneeded work.\n\t//\n\trefresh(autoRedraw:boolean = false) {\n\t\tif(this.waitingForFrame === false && this.options.autoRedraw === false) {\n\t\t\t// the waiting for frame flag makes sure that the frame will only be redrawn once\n\t\t\t// if mulitple requests are made on the same canvas before it gets a chance to draw\n\t\t\tthis.waitingForFrame = true;\n\t\t\trequestAnimationFrame(this.redraw.bind(this));\n\t\t\t\n\t\t\tif(autoRedraw === true) {\n\t\t\t\tthis.options.autoRedraw = autoRedraw;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n \t}\n\n\tstop() {\n\t\tthis.options.autoRedraw = false;\n\t\treturn this;\n\t}\n\n\tredraw() {\n\t\tthis.tick++;\n\t\tthis.waitingForFrame = false;\n\n\t\tthis.clear();\n\n\t\t// call the redraw event, so that the position of objects etc can be updated\n\t\tthis.options.onRedraw(this);\n\n\t\t// after the redraw event there might be some objects we dont want to render\n\t\t// anymore. So we get a list of them, and remove them from the render queue\n\t\tlet beforeLen = this.renderQueue.length;\n\t\tthis.renderQueue = this.renderQueue.filter(o => !o.renderingFinished);\n\t\t\n\t\tif(beforeLen != this.renderQueue.length) {\n\t\t\tthis.renderQueueChanged = true;\n\t\t}\n\n\t\t// we want to calulate the time since the last frame so that things can be animated consistantly\n\t\tvar currentTime = new Date();\n\t\tvar sinceLastFrame = currentTime - (this.lastFrameTime || currentTime);\n\t\tthis.lastFrameTime = currentTime;\n\n\t\tthis.renderObjects(this.renderQueue, sinceLastFrame);\n\n\t\tif(this.options.autoRedraw === true) {\n\t\t\trequestAnimationFrame(this.redraw.bind(this));\n\t\t}\n\n\t\tthis.renderQueueChanged = false;\n\t}\n\n\trenderObjects(renderQueue:IRenderable[], sinceLastFrame:number) {\n\t\tthis.context.save();\n\t\tthis.context.scale(this._scale, this._scale);\n\n\t\trenderQueue.forEach(function(o) {\n\t\t\tthis.renderObject(o, sinceLastFrame);\n\t\t}.bind(this));\n\n\t\tthis.context.restore();\n\t}\n\n\trenderObject(o:IRenderable, sinceLastFrame:number) {\n\t\tif(o) {\n\t\t\to.render(this, sinceLastFrame);\n\t\t}\t\t\n\t}\n\n\tadd(o:IRenderable) {\n\t\treturn this.startRendering(o);\n\t}\n\n\tstartRendering(o:IRenderable) {\n    \tif(!o) {\n    \t\treturn;\n    \t}\n\n\t\t// the object has to have a render function for it to be added to the queue\n\t\tif(!o.render || typeof o.render != 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\t// re-adding the object resets the render finished flag\n\t\tif(o.renderingFinished === true) {\n\t\t\to.renderingFinished = false;\n\t\t}\n\n\t\t// if the object has a viewport variable that is not set yet, then we will set it\n\t\t// to the current one. Don't want to overwrite this though, because it is possible\n\t\t// for an object to belong to more than one viewport\n\t\tif(!o.viewport) {\n\t\t\to.viewport = this;\n\t\t}\n\n\t\t// if it has a resize method, then we fire that as well when it is added, so that\n\t\t// it can position itself etc\n\t\tif(typeof o.onResize == 'function') {\n\t\t\to.onResize(this._width, this._height, this);\n\t\t}\n\n\t\tthis.renderQueue.push(o);\n\t\tthis.renderQueueChanged = true;\n\n\t\t// now we need to sort the render queue by zindex to make sure it is rendered in the same order\n\t\tthis.renderQueue.sort(function(a, b) { return (a.zIndex || 1) - (b.zIndex || 1);});\n\n\t\treturn this;\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n\tgetObjectCount() {\n\t\treturn this.renderQueue.length;\n\t}\n\n\t// gets the center of the canvas in static co-ords\n\tget center():XY.Point {\n\t\treturn this.rect.center;\n\t}\n\n\tget rect():XY.Rect {\n\t\treturn this._rect = this._rect || new XY.Rect(0, 0, this._width, this._height);\n\t}\n\t\n\t// convert coordinates inside the canvas element to viewport coordinates\n\tcanvasToViewport(sx:number, sy:number) {\n\t\treturn {\n\t\t\tx: this.origin.x + sx,\n\t\t\ty: this.origin.y + sy\n\t\t};\n\t}\n\n\t// convert coordinates inside the window containing the convas to \n\t// viewport coordinates\n\twindowToViewport(x:number, y:number) {\n\t\treturn this.canvasToViewport(\n\t\t\tx - this.canvas.offsetLeft,\n\t\t\ty - this.canvas.offsetTop\n\t\t);\n\t}\n\n\n}\n\nexport class WorldViewport extends Viewport {\n\tstaticQueue:IRenderable[];\n\tworldQueue:IRenderable[];\n\t_center:?XY.Point;\n\n\tconstructor(element:HTMLElement, options:Object = {}) {\n\t\tsuper(element, options);\n\t\tthis.origin = this.options.origin || {x:0, y:0};\n\t\tthis.staticQueue = [];\n\t\tthis.worldQueue = [];\n\t}\n\n\tupdateQueues(renderQueue:IRenderable[]) {\n\t\tthis.staticQueue = renderQueue.filter(o => o.positionType != 'world');\n\t\tthis.worldQueue  = renderQueue.filter(o => o.positionType == 'world');\n\t}\n\n\trenderObjects(renderQueue:IRenderable[], sinceLastFrame:number) {\n\t\tif(this.renderQueueChanged === true) {\n\t\t\tthis.updateQueues(renderQueue);\n\t\t}\n\n\t\tthis.updateDimensions();\n\n\t\tthis.context.save();\n\t\tthis.context.scale(this._scale, this._scale);\n\t\tthis.context.translate(-this.origin.x, -this.origin.y);\n\t\t\n\t\tfor(var i=0; i < this.worldQueue.length; i++) {\n\t\t\tthis.renderObject(this.worldQueue[i], sinceLastFrame);\n\t\t}\n\n\t\tthis.context.restore();\n\n\t\t// this means that static objects will always render on top of the world ones\n\t\t// it would be difficult to fix this, but since this is mostly what we want anyway\n\t\t// lets just ignore this problem\n\t\tsuper.renderObjects(this.staticQueue, sinceLastFrame);\n\n\t}\n\n\t// calls the render method the object in the right way. If the renderable\n\t// has the position type set to world, then we check if the object is visible\n\t// before rendering, as well as calling any other aux functions.\n\t//\n\t// Statically positioned objects are rendered the same as before\n\trenderObject(o:IRenderable, sinceLastFrame:number) {\n\t\tif(o.positionType == 'world' && o instanceof ViewportObject) {\n\t\t\tif(this.objectVisible(o) && o.render) {\n\t\t\t\to.render(this, sinceLastFrame);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper.renderObject(o, sinceLastFrame);\n\t\t}\n\t}\n\n\t// this sets the canvas (0,0) (in screen coords) to the x,y arguments\n\t// in world coordinates. Put another way, the x,y provided as arguments\n\t// will be the world coordinates of the top left corner of the canvas.\n\tsetOrigin(x:number, y:number) {\n\t\tthis.origin = {x: x, y: y};\n\t}\n\n\tgetOrigin():XY.Point {\n\t\treturn this.origin;\n\t}\n\n\t// this is the same as setOrigin, but it uses the center of the canvas as the reference\n\t// instead of the top-left. x and y will be the world coordinates of the center of the \n\t// canvas\n\tsetCenter(x:number, y:number) {\n\t\tthis._center = null;\n\t\tthis._rect = null;\n\t\tthis.setOrigin(x - Math.round(this._width / 2), y - Math.round(this._height / 2));\n\t}\n\n\tget center():XY.Point {\n\t\treturn this._center = this._center || {\n\t\t\tx: this.origin.x + Math.round(this._width / 2),\n\t\t\ty: this.origin.y + Math.round(this._height / 2)\n\t\t};\n\t}\n\n\t// returns the bounds of the viewport in world coordinates\n\t// this is mainly used to decide if a given object is visible on the\n\t// canvas and should be rendered\n\tget rect():Object {\n\t\treturn this._rect = this._rect || new XY.Rect(this.origin.x, this.origin.y, this._width, this._height);\n\t}\n\n\t//\n\t// assumes the object being passed has at least a 'getBounds' method, and if not\n\t// at least an x or y property so it can be evalulated as a point\n\t//\n\t// this will default to returning TRUE\n\t//\n\t// this gets called for every objet on every frame, so we should work on making it more\n\t// efficient...\n\t//\n\tobjectVisible(o:ViewportObject) {\n\t\tif(o.x == null || o.y == null)\n\t\t\treturn true;\n\n\t\tif(this.pointVisible(o.x, o.y))\n\t\t\treturn true;\n\n\t\tif((o.x - this.origin.x > this._width * 2) || (o.x - this.origin.x < -this._width))\n\t\t\treturn false;\n\n\t\tif((o.y - this.origin.y > this._height * 2) || (o.y - this.origin.y < -this._height))\n\t\t\treturn false;\n\n\t\tlet bounds:?XY.Bounds;\n\n\t\tif(!o.getBounds) {\n\t\t\tif(o.x !== undefined  && o.y !== undefined) {\n\t\t\t\treturn this.pointVisible(o.x, o.y);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tbounds = (o:any).getBounds();\n\t\t}\n\n\t\tif(!bounds.width || !bounds.height) {\n\t\t\t// either object has no width and height, or they are\n\t\t\t// undefined. Either way just evaluate the visibility as if it was a point\n\t\t\treturn this.pointVisible(bounds.x, bounds.y);\n\t\t} else {\n\t\t\t// we need to check the visibility of each corner of the bounds, if any is visible\n\t\t\t// then we say that the object is\n\t\t\treturn this.pointVisible(bounds.x, bounds.y) ||\n\t\t\t\tthis.pointVisible(bounds.x + bounds.width, bounds.y) ||\n\t\t\t\tthis.pointVisible(bounds.x, bounds.y + bounds.height) ||\n\t\t\t\tthis.pointVisible(bounds.x + bounds.width, bounds.y + bounds.height);\n\t\t}\n\t}\n\n\tpointVisible(x:number, y:number) {\n\t\treturn (x >= this.origin.x && x < this.origin.x + this._width) && (y >= this.origin.y && y < this.origin.y + this._height);\n\t}\n}\n"]}