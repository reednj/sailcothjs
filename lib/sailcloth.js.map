{"version":3,"sources":["../src/sailcloth.js"],"names":["PIXEL_RATIO","ctx","document","createElement","getContext","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Renderable","constructor","renderingFinished","positionType","zIndex","render","viewport","sinceLastFrame","ViewportObject","options","x","y","update","Viewport","element","sizingElement","autoRedraw","onRedraw","tick","waitingForFrame","lastFrameTime","renderQueueChanged","renderQueue","canvas","context","updateDimensions","addEventListener","autosize","_width","width","_scale","_height","height","_rect","parentSize","clientWidth","clientHeight","setSize","forEach","o","onResize","Math","floor","style","start","refresh","requestAnimationFrame","redraw","bind","stop","clear","filter","currentTime","Date","renderObjects","renderObject","add","startRendering","push","sort","a","b","clearRect","getObjectCount","length","center","round","rect","WorldViewport","origin","staticQueue","worldQueue","setScale","n","updateQueues","save","scale","translate","i","restore","objectVisible","setOrigin","getOrigin","setCenter","_center","pointVisible","bounds","getBounds","undefined"],"mappings":"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","file":"sailcloth.js","sourcesContent":["// @flow\nimport { Rect  } from './types.js'\nimport type { Point, Size, Bounds } from './types.js'\n\n// this tells us the display density, if it is retina etc. This is important, otherwise\n// things end up loking blurry - we need to scale when rendering to make things look\n// nice and sharp. This PIXEL_RATIO will tell us the amount to scale by\nvar PIXEL_RATIO = (function () {\n\tvar ctx = document.createElement(\"canvas\").getContext(\"2d\");\n\tvar dpr = window.devicePixelRatio || 1;\n\tvar bsr = ctx.webkitBackingStorePixelRatio ||\n\t\tctx.mozBackingStorePixelRatio ||\n\t\tctx.msBackingStorePixelRatio ||\n\t\tctx.oBackingStorePixelRatio ||\n\t\tctx.backingStorePixelRatio || 1;\n\n\t//$FlowFixMe\n\treturn dpr / bsr;\n})();\n\nexport interface IRenderable {\n    viewport:Viewport;\n\trenderingFinished:boolean;\n\tpositionType: \"world\" | \"static\";\n    render(viewport:Viewport, sinceLastFrame:number):void;\n}\n\nexport class Renderable {\n\tviewport:Viewport;\n\trenderingFinished:boolean;\n\tpositionType: \"world\" | \"static\";\n\tzIndex:number;\n\tconstructor() {\n\t\tthis.renderingFinished = false;\n\t\tthis.positionType = \"world\";\n\t\tthis.zIndex = 100;\n\t}\n\n\trender(viewport:Viewport, sinceLastFrame:number) {\n\t}\n}\n\nexport class ViewportObject extends Renderable {\n    x:number;\n\ty:number;\n\twidth:?number;\n\theight:?number;\n    constructor(options:{x:number,y:number}) {\n\t\tsuper();\n\t\tthis.x = options.x;\n\t\tthis.y = options.y;\n    }\n\n    render(viewport:Viewport, sinceLastFrame:number) {\n        this.update(sinceLastFrame);\n    }\n\n    update(sinceLastFrame:number) {\n    }\n}\n\nexport class Viewport {\n    element:?HTMLCanvasElement;\n    options:Object;\n    tick:number;\n    waitingForFrame:boolean;\n    lastFrameTime:?Date;\n    renderQueueChanged:boolean;\n    renderQueue:Object[];\n    canvas:HTMLCanvasElement;\n    context:CanvasRenderingContext2D;\n    \n    _width:number;\n    _height:number;\n\t_scale:number;\n\t_rect:?Rect;\n\t\n\t// if this is set to an element, the canvas will try to fill it\n\t// as much as possible when the window is resized\n\tsizingElement:?HTMLElement;\n\tconstructor(element:HTMLCanvasElement, options:Object) {\n\t\tthis.element = element;\n\t\tthis.sizingElement = options.sizingElement || null;\n        \n        this.options = options || {};\n      \tthis.options.autoRedraw = false;\n\t\tthis.options.onRedraw = this.options.onRedraw || function() {};\n\n\t\tthis.tick = 0;\n\t\tthis.waitingForFrame = false;\n\t\tthis.lastFrameTime = null;\n\n\t\tthis.renderQueueChanged = false;\n\t\tthis.renderQueue = [];\n\n\t\tthis.canvas = this.element;\n\t\tthis.context = this.canvas.getContext('2d');\n\t\tthis.updateDimensions();\n\n\t\tif(this.sizingElement) {\n\t\t\twindow.addEventListener('resize', () => this.autosize());\n\t\t\tthis.autosize();\n\t\t}\n\t}\n\n\tupdateDimensions() {\n\t\t// the canvas height and width properties actually call a function. We assign them\n\t\t// here to variables for speed reasons, as they might get accessed many times per\n\t\t// frame\n\t\tthis._width = this.canvas.width / (this._scale || 1.0);\n\t\tthis._height = this.canvas.height / (this._scale || 1.0);\n\t\tthis._rect = null;\n\t}\n\n\tautosize() {\n\t\tif(this.canvas && this.sizingElement) {\n\t\t\tvar parentSize = {\n\t\t\t\tx: this.sizingElement.clientWidth || 0,\n\t\t\t\ty: this.sizingElement.clientHeight || 0\n\t\t\t}\n\n\n\n\t\t\tthis.setSize(parentSize.x, parentSize.y);\n\t\t\t//this.canvas.width = \n\t\t\t//this.canvas.height = parentSize.y;\n\n\t\t\tthis.renderQueue.forEach(o => {\n\t\t\t\tif(typeof o.onResize == 'function') {\n\t\t\t\t\to.onResize(this._width, this._height, this);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.updateDimensions();\n\t\t}\n\t}\n\n\tsetSize(width:number, height:number) {\n\t\tif(this._scale > 1.0) {\n\t\t\tthis.canvas.width = Math.floor(width * this._scale);\n\t\t\tthis.canvas.height = Math.floor(height * this._scale);\n\t\t\tthis.canvas.style.width = width + 'px';\n\t\t\tthis.canvas.style.height = height + 'px';\n\t\t} else {\n\t\t\tthis.canvas.width = width;\n\t\t\tthis.canvas.height = height;\n\t\t}\n\t}\n\n\tstart() {\n\t\treturn this.refresh(true);\n\t}\n\n\trefresh(autoRedraw:boolean = false) {\n\t\tif(this.waitingForFrame === false && this.options.autoRedraw === false) {\n\t\t\trequestAnimationFrame(this.redraw.bind(this));\n\n\t\t\t// the waiting for frame flag makes sure that the frame will only be redrawn once\n\t\t\t// if mulitple requests are made on the same canvas before it gets a chance to draw\n\t\t\tthis.waitingForFrame = true;\n\n\t\t\tif(autoRedraw === true) {\n\t\t\t\tthis.options.autoRedraw = autoRedraw;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n \t}\n\n\tstop() {\n\t\tthis.options.autoRedraw = false;\n\t\treturn this;\n\t}\n\n\tredraw() {\n\t\tthis.tick++;\n\t\tthis.waitingForFrame = false;\n\n\t\tthis.clear();\n\n\t\t// call the redraw event, so that the position of objects etc can be updated\n\t\tthis.options.onRedraw(this);\n\n\t\t// after the redraw event there might be some objects we dont want to render\n\t\t// anymore. So we get a list of them, and remove them from the render queue\n\t\tthis.renderQueue = this.renderQueue.filter(o => !o.renderingFinished);\n\n\t\t// we want to calulate the time since the last frame so that things can be animated consistantly\n\t\tvar currentTime = new Date();\n\t\tvar sinceLastFrame = currentTime - (this.lastFrameTime || currentTime);\n\t\tthis.lastFrameTime = currentTime;\n\n\t\tthis.renderObjects(this.renderQueue, sinceLastFrame);\n\n\t\tif(this.options.autoRedraw === true) {\n\t\t\trequestAnimationFrame(this.redraw.bind(this));\n\t\t}\n\n\t\tthis.renderQueueChanged = false;\n\t}\n\n\trenderObjects(renderQueue:IRenderable[], sinceLastFrame:number) {\n\t\trenderQueue.forEach(function(o) {\n\t\t\tthis.renderObject(o, sinceLastFrame);\n\t\t}.bind(this));\n\t}\n\n\trenderObject(o:IRenderable, sinceLastFrame:number) {\n\t\tif(o) {\n\t\t\to.render(this, sinceLastFrame);\n\t\t}\t\t\n\t}\n\n\tadd(o:IRenderable) {\n\t\treturn this.startRendering(o);\n\t}\n\n\tstartRendering(o:IRenderable) {\n    \tif(!o) {\n    \t\treturn;\n    \t}\n\n\t\t// the object has to have a render function for it to be added to the queue\n\t\tif(!o.render || typeof o.render != 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\t// re-adding the object resets the render finished flag\n\t\tif(o.renderingFinished === true) {\n\t\t\to.renderingFinished = false;\n\t\t}\n\n\t\t// if the object has a viewport variable that is not set yet, then we will set it\n\t\t// to the current one. Don't want to overwrite this though, because it is possible\n\t\t// for an object to belong to more than one viewport\n\t\tif(!o.viewport) {\n\t\t\to.viewport = this;\n\t\t}\n\n\t\t// if it has a resize method, then we fire that as well when it is added, so that\n\t\t// it can position itself etc\n\t\tif(typeof o.onResize == 'function') {\n\t\t\to.onResize(this._width, this._height, this);\n\t\t}\n\n\t\tthis.renderQueue.push(o);\n\t\tthis.renderQueueChanged = true;\n\n\t\t// now we need to sort the render queue by zindex to make sure it is rendered in the same order\n\t\tthis.renderQueue.sort(function(a, b) { return (a.zIndex || 1) - (b.zIndex || 1);});\n\n\t\treturn this;\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n\tgetObjectCount() {\n\t\treturn this.renderQueue.length;\n\t}\n\n\t// gets the center of the canvas in static co-ords\n\tget center():Point {\n\t\treturn {\n\t\t\tx: Math.round(this._width / 2),\n\t\t\ty: Math.round(this._height / 2)\n\t\t};\n\t}\n\n\tget rect():Rect {\n\t\treturn this._rect = this._rect || new Rect(0, 0, this._width, this._height);\n\t}\n\n}\n\nexport class WorldViewport extends Viewport {\n\torigin:Point;\n\tstaticQueue:IRenderable[];\n\tworldQueue:IRenderable[];\n\n\t_center:?Point;\n\n\tconstructor(element:HTMLCanvasElement, options:Object = {}) {\n\t\tsuper(element, options);\n\t\tthis.origin = this.options.origin || {x:0, y:0};\n\n\t\tthis.staticQueue = [];\n\t\tthis.worldQueue = [];\n\t\tthis._width = 0.0;\n\t\tthis._height = 0.0;\n\n\t\tthis.setScale(PIXEL_RATIO);\n\t\tthis.updateDimensions();\n\n\t}\n\n\tsetScale(n:number) {\n\t\tif(n != null) {\n\t\t\tthis._scale = n;\n\t\t\tthis.updateDimensions();\n\t\t}\n\t}\n\n\tupdateQueues(renderQueue:IRenderable[]) {\n\t\tthis.staticQueue = renderQueue.filter(o => o.positionType != 'world');\n\t\tthis.worldQueue  = renderQueue.filter(o => o.positionType == 'world');\n\t}\n\n\trenderObjects(renderQueue:IRenderable[], sinceLastFrame:number) {\n\t\tif(this.renderQueueChanged === true) {\n\t\t\tthis.updateQueues(renderQueue);\n\t\t}\n\n\t\tthis.updateDimensions();\n\n\t\tthis.context.save();\n\t\tthis.context.scale(this._scale, this._scale);\n\t\tthis.context.translate(-this.origin.x, -this.origin.y);\n\t\t\n\t\tfor(var i=0; i < this.worldQueue.length; i++) {\n\t\t\tthis.renderObject(this.worldQueue[i], sinceLastFrame);\n\t\t}\n\n\t\tthis.context.restore();\n\n\t\t// this means that static objects will always render on top of the world ones\n\t\t// it would be difficult to fix this, but since this is mostly what we want anyway\n\t\t// lets just ignore this problem\n\t\tsuper.renderObjects(this.staticQueue, sinceLastFrame);\n\n\t}\n\n\t// calls the render method the object in the right way. If the renderable\n\t// has the position type set to world, then we check if the object is visible\n\t// before rendering, as well as calling any other aux functions.\n\t//\n\t// Statically positioned objects are rendered the same as before\n\trenderObject(o:IRenderable, sinceLastFrame:number) {\n\t\tif(o.positionType == 'world' && o instanceof ViewportObject) {\n\t\t\tif(this.objectVisible(o) && o.render) {\n\t\t\t\to.render(this, sinceLastFrame);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper.renderObject(o, sinceLastFrame);\n\t\t}\n\t}\n\n\t// this sets the canvas (0,0) (in screen coords) to the x,y arguments\n\t// in world coordinates. Put another way, the x,y provided as arguments\n\t// will be the world coordinates of the top left corner of the canvas.\n\tsetOrigin(x:number, y:number) {\n\t\tthis.origin = {x: x, y: y};\n\t}\n\n\tgetOrigin():Point {\n\t\treturn this.origin;\n\t}\n\n\t// this is the same as setOrigin, but it uses the center of the canvas as the reference\n\t// instead of the top-left. x and y will be the world coordinates of the center of the \n\t// canvas\n\tsetCenter(x:number, y:number) {\n\t\tthis._center = null;\n\t\tthis._rect = null;\n\t\tthis.setOrigin(x - Math.round(this._width / 2), y - Math.round(this._height / 2));\n\t}\n\n\tget center():Point {\n\t\treturn this._center = this._center || {\n\t\t\tx: this.origin.x + Math.round(this._width / 2),\n\t\t\ty: this.origin.y + Math.round(this._height / 2)\n\t\t};\n\t}\n\n\t// returns the bounds of the viewport in world coordinates\n\t// this is mainly used to decide if a given object is visible on the\n\t// canvas and should be rendered\n\tget rect():Object {\n\t\treturn this._rect = this._rect || new Rect(this.origin.x, this.origin.y, this._width, this._height);\n\t}\n\n\t//\n\t// assumes the object being passed has at least a 'getBounds' method, and if not\n\t// at least an x or y property so it can be evalulated as a point\n\t//\n\t// this will default to returning TRUE\n\t//\n\t// this gets called for every objet on every frame, so we should work on making it more\n\t// efficient...\n\t//\n\tobjectVisible(o:ViewportObject) {\n\t\tif(o.x == null || o.y == null)\n\t\t\treturn true;\n\n\t\tif(this.pointVisible(o.x, o.y))\n\t\t\treturn true;\n\n\t\tif((o.x - this.origin.x > this._width * 2) || (o.x - this.origin.x < -this._width))\n\t\t\treturn false;\n\n\t\tif((o.y - this.origin.y > this._height * 2) || (o.y - this.origin.y < -this._height))\n\t\t\treturn false;\n\n\t\tlet bounds:?Bounds;\n\n\t\tif(!o.getBounds) {\n\t\t\tif(o.x !== undefined  && o.y !== undefined) {\n\t\t\t\treturn this.pointVisible(o.x, o.y);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tbounds = (o:any).getBounds();\n\t\t}\n\n\t\tif(!bounds.width || !bounds.height) {\n\t\t\t// either object has no width and height, or they are\n\t\t\t// undefined. Either way just evaluate the visibility as if it was a point\n\t\t\treturn this.pointVisible(bounds.x, bounds.y);\n\t\t} else {\n\t\t\t// we need to check the visibility of each corner of the bounds, if any is visible\n\t\t\t// then we say that the object is\n\t\t\treturn this.pointVisible(bounds.x, bounds.y) ||\n\t\t\t\tthis.pointVisible(bounds.x + bounds.width, bounds.y) ||\n\t\t\t\tthis.pointVisible(bounds.x, bounds.y + bounds.height) ||\n\t\t\t\tthis.pointVisible(bounds.x + bounds.width, bounds.y + bounds.height);\n\t\t}\n\t}\n\n\tpointVisible(x:number, y:number) {\n\t\treturn (x >= this.origin.x && x < this.origin.x + this._width) && (y >= this.origin.y && y < this.origin.y + this._height);\n\t}\n}\n"]}