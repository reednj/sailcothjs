{"version":3,"sources":["../src/types.js"],"names":["Rect","top","left","width","height","_x","_y","_width","_height","_bounds","bottom","right","_center","x","y","_origin","_size","Vector","size","Math","sqrt","pow"],"mappings":";;;;;;;;;;IAMaA,I,WAAAA,I;AAWZ,eAAYC,GAAZ,EAAwBC,IAAxB,EAAqCC,KAArC,EAAmDC,MAAnD,EAAkE;AAAA;;AACjE,OAAKC,EAAL,GAAUJ,GAAV;AACA,OAAKK,EAAL,GAAUJ,IAAV;AACA,OAAKK,MAAL,GAAcJ,KAAd;AACA,OAAKK,OAAL,GAAeJ,MAAf;AACA;;;;sBAEmB;AACnB,UAAO,KAAKK,OAAL,GAAe,KAAKA,OAAL,IAAgB;AACrCR,SAAI,KAAKK,EAD4B;AAErCJ,UAAK,KAAKG,EAF2B;AAGrCK,YAAO,KAAKJ,EAAL,GAAU,KAAKE,OAHe;AAIrCG,WAAM,KAAKN,EAAL,GAAU,KAAKE;AAJgB,IAAtC;AAMA;;;sBAEkB;AAClB,UAAO,KAAKK,OAAL,GAAe,KAAKA,OAAL,IAAgB;AACrCC,OAAG,KAAKR,EAAL,GAAU,KAAKE,MAAL,GAAc,CADU;AAErCO,OAAG,KAAKR,EAAL,GAAU,KAAKE,OAAL,GAAe;AAFS,IAAtC;AAIA;;;sBAEkB;AAClB,UAAO,KAAKO,OAAL,GAAe,KAAKA,OAAL,IAAgB;AACrCF,OAAG,KAAKR,EAD6B;AAErCS,OAAG,KAAKR;AAF6B,IAAtC;AAIA;;;sBAEe;AACf,UAAO,KAAKU,KAAL,GAAa,KAAKA,KAAL,IAAc;AACjCb,WAAM,KAAKI,MADsB;AAEjCH,YAAQ,KAAKI;AAFoB,IAAlC;AAIA;;;;;;IAGWS,M,WAAAA,M;AAGZ,iBAAYJ,CAAZ,EAAsBC,CAAtB,EAAgC;AAAA;;AAC/B,OAAKT,EAAL,GAAUQ,CAAV;AACA,OAAKP,EAAL,GAAUQ,CAAV;AACA;;;;2BAce;AACf,UAAO,IAAIG,MAAJ,CAAW,KAAKJ,CAAL,GAAS,KAAKK,IAAzB,EAA+B,KAAKJ,CAAL,GAAS,KAAKI,IAA7C,CAAP;AACA;;;6BAEiB;AACjB,UAAO,EAACL,GAAG,KAAKA,CAAT,EAAYC,GAAG,KAAKA,CAApB,EAAP;AACA;;;sBAlBO;AACP,UAAO,KAAKT,EAAZ;AACA;;;sBAEO;AACP,UAAO,KAAKC,EAAZ;AACA;;;sBAEU;AACV,UAAOa,KAAKC,IAAL,CAAUD,KAAKE,GAAL,CAAS,KAAKhB,EAAd,EAAkB,CAAlB,IAAuBc,KAAKE,GAAL,CAAS,KAAKf,EAAd,EAAkB,CAAlB,CAAjC,CAAP;AACA","file":"types.js","sourcesContent":["// @flow\n\nexport type Bounds = { top:number, left:number, bottom:number, right:number }\nexport type Point = { x:number,y:number }\nexport type Size = { width:number, height:number }\n\nexport class Rect {\n\t_x:number;\n\t_y:number;\n\t_width:number;\n\t_height:number;\n\n\t_bounds:Bounds;\n\t_center:Point;\n\t_origin:Point;\n    _size:Size;\n    \n\tconstructor(top:number, left:number, width:number, height:number) {\n\t\tthis._x = top;\n\t\tthis._y = left;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n\tget bounds():Bounds {\n\t\treturn this._bounds = this._bounds || { \n\t\t\ttop:this._y,\n\t\t\tleft:this._x,\n\t\t\tbottom:this._y + this._height,\n\t\t\tright:this._x + this._width\n\t\t}\n\t}\n\n\tget center():Point {\n\t\treturn this._center = this._center || {\n\t\t\tx: this._x + this._width / 2,\n\t\t\ty: this._y + this._height / 2\n\t\t}\n\t}\n\n\tget origin():Point {\n\t\treturn this._origin = this._origin || {\n\t\t\tx: this._x,\n\t\t\ty: this._y\n\t\t}\n\t}\n\n\tget size():Size {\n\t\treturn this._size = this._size || {\n\t\t\twidth:this._width,\n\t\t\theight: this._height\n\t\t}\n\t}\n}\n\nexport class Vector {\n\t_x:number;\n\t_y:number;\n\tconstructor(x:number, y:number) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t}\n\n\tget x() {\n\t\treturn this._x;\n\t}\n\n\tget y() {\n\t\treturn this._y;\n\t}\n\n\tget size() {\n\t\treturn Math.sqrt(Math.pow(this._x, 2) + Math.pow(this._y, 2));\n\t}\n\n\ttoUnit():Vector {\n\t\treturn new Vector(this.x / this.size, this.y / this.size);\n\t}\n\n\ttoObject():Object {\n\t\treturn {x: this.x, y: this.y};\n\t}\n}\n\n"]}